# -*- coding: utf-8 -*-
"""
Created on Fri Dec  9 20:00:29 2022

@author: marco
"""

import PySimpleGUI as sg
from pypylon import pylon
from net_speed import get_link_speed_statistics


def adv_params_gui():
    
    genapi_version = "3.1.0"
    dev_version = "3.7.0" 
    dev_name = "Basler::GigECamera"
     
    init_code = "05D8C294-F295-4dfb-9D01-096BD04049F4"
    product_guid = "1F3C6A72-7842-4edd-9130-E2E90A2058BA"
    product_version_guid = "6512A424-1B05-4C68-99D6-91F0E31857CD"
    
    seq_tot_number = 2
    seq_index = 0
    seq_exec = 1        
    adv_mode_def = "Auto"
    
    gain_auto = "Off"        
    gain_sel = "All"
    black_level_sel = "All"
    
    gamma_en = 0
    opt_gamma_sel = "User"
    gamma = 1
    
    dig_shift = 0
    pix_format_def = "Mono8"
    reversx = 0
    test_image_sel = "Off"
    
    offset_x = 0
    offset_y = 0
    center_x = 0 
    center_y = 0
    
    bin_mode_horiz = "Summing"        
    bin_mode_vert = "Summing"
    bin_horiz = 1
    bin_vert = 1
    
    acq_frame_count = 1
    trigger_sel_one = "AcquisitionStart"
    trigger_sel_two = "FrameStart"
    trigger_mode = "Off"
    trigger_source = "Line1"
    trigger_activation = "RisingEdge"
    trigger_delay_abs = 0
    
    exp_mode = "Time"
    exp_auto = "Off"
    shutter_mode = "GlobalResetRelease"
    acq_frame_rate_en = 0 
    
    line_sel_one = "line1"        
    line_sel_two = "Out1"
    line_mode_in = "Input"
    line_mode_out = "Output" 
    line_format = "OctoCoupled"
    line_source = "UserOutput"
    line_inv = 0
    line_deb_time = 1000
    minout_pulse = 0
    
    counter_sel_one = "Counter1"
    counter_sel_two = "Counter2"
    counter_ev_source_one = "FrameTrigger"
    counter_ev_source_two = "FrameStart"
    counter_reset_source = "Off"
    
    lut_sel = "Luminance"
    lut_value_all = ""
    lut_en  = 0
    
    length_lut = len(lut_value_all)
    
 ##   print(len(lut_value_all))
    
    lut_value_abr = lut_value_all[:5] + " ... " + lut_value_all[length_lut-5] + lut_value_all[length_lut-4] + lut_value_all[length_lut-3] + lut_value_all[length_lut-2] + lut_value_all[length_lut-1]
    
    gev_stream_channel_sel = "StreamChannel0"

    auto_target_value = 128
    gray_adjust = 700
    bal_white_adjust = 1000
    
    auto_gain_lower = 0 
    auto_gain_upper = 63
    
    auto_exp_lower = 70
    auto_exp_upper = 350000
    
    auto_func_prof = "GainMinimum"
    auto_func_aoi_width = 1920
    auto_func_aoi_height = 1080
    auto_func_aoi_offset_x = 0
    auto_func_aoi_offset_y = 0
  
    user_defined_val_sel_t = "User defined value selector"
    user_defined_val_t = "User defined value"
    
    
    user_def_value_sel_one = "Value1"
    user_def_value_sel_two = "Value2"
    user_def_value_sel_three = "Value3"  
    user_def_value_sel_four = "Value4" 
    user_def_value_sel_five = "Value5" 
     
    user_defined_value_one = 0
    user_defined_value_two = 0
    user_defined_value_three = 0
    user_defined_value_four = 0
    user_defined_value_five = 0
    
    chunk_mode = 0
    event_sel_one = "ExposureEnd"
    event_sel_two = "FrameStartOvertrigger"
    event_sel_three = "AcquisitionStartOvertrigger"
    event_sel_four = "FrameStart"
    event_sel_five = "AcquisitionStart"
    event_sel_six = "EventOverrun"
    
    event_notif_one = "Off"
    event_notif_two = "Off"
    event_notif_three = "Off"
    event_notif_four = "Off"
    event_notif_five = "Off"
    event_notif_six = "Off"
    
    title_left = "Event selector"
    title_right = "Event notification"  
 
    params_changed = {}

    def gui_headers():
        
        print("Headers panel")
        
        genapi_version = "3.1.0"
        dev_version = "3.7.0" 
        dev_name = "Basler::GigECamera"
        
        init_code = "05D8C294-F295-4dfb-9D01-096BD04049F4"
        product_guid = "1F3C6A72-7842-4edd-9130-E2E90A2058BA"
        product_version_guid = "6512A424-1B05-4C68-99D6-91F0E31857CD"
        
        sev_changes = []
        
        image_viewer_coloumn = [
            [sg.Text("GenApi persistence file - version: " )],
            [sg.Input(default_text= genapi_version, size=(19, 1), key="GENAPI_V")],    ## , sg.Button('Copy')]
            [sg.Text("Device version: ")],
            [sg.Input(default_text= dev_version, size=(19, 1), key="DEV_V")],
            [sg.Text("Device name: ")],
            [sg.Input(default_text= dev_name, size=(19, 1), key="DEV_NAME")]
            
        ] 
         
        
        image_sec_viewer_coloumn = [
            [sg.Text("Initial code: ")],
            [sg.Input(default_text= init_code, size=(50, 1), key="INIT_CODE")],
            [sg.Text("Product GUID: ")],
            [sg.Input(default_text= product_guid, size=(50, 1), key="PROD_GUID")],
            [sg.Button("Product version GUID: ")],
            [sg.Input(default_text= product_version_guid, size=(50, 1), key="PROD_V_GUID")]
        ]        
        
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ]
         
        layout = [
            [
                sg.Column(image_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(image_sec_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(third_layout)
            ]
        ]
    
         
        window = sg.Window("Headers Info", layout, modal=True)        
        
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save":
               
               if values['GENAPI_V'] != genapi_version:                  
                   sev_changes.append(('GENAPI_V', values['GENAPI_V']))
               else:
                   sev_changes.append(('GENAPI_V', genapi_version))                   
                   
               if values['DEV_V'] != dev_version:
                   sev_changes.append(('DEV_V', values['DEV_V']))
               else:
                   sev_changes.append(('DEV_V', dev_version))
                   
               if values['DEV_NAME'] != dev_name:
                   sev_changes.append(('DEV_NAME', values['DEV_NAME']))
               else:
                   sev_changes.append(('DEV_NAME', dev_name)) 
                    
               if values['INIT_CODE'] != init_code:
                   sev_changes.append(('INIT_CODE', values['INIT_CODE'])) 
               else:
                   sev_changes.append(('INIT_CODE', init_code))     
                  
               if values['PROD_GUID'] != product_guid:
                   sev_changes.append(('PROD_GUID', values['PROD_GUID']))
               else:
                   sev_changes.append(('PROD_GUID', product_guid))
                   
               if values['PROD_V_GUID'] != product_version_guid:  
                   sev_changes.append(('PROD_V_GUID', values['PROD_V_GUID']))
               else:
                   sev_changes.append(('PROD_V_GUID', product_version_guid))
                   
               break 
           
        window.close()
        
        names_par = []
        
        if len(sev_changes) < 6:
        
            for ind_ch, change in enumerate(sev_changes):
               (name_p, val_p) = change
               
               names_par.append(name_p)
            
            if True:         
                
               if 'GENAPI_V' not in names_par:
                   sev_changes.insert(0, ('GENAPI_V', genapi_version))
               if 'DEV_V' not in names_par:
                   sev_changes.insert(1, ('DEV_V', dev_version))
               if 'DEV_NAME' not in names_par:
                   sev_changes.insert(2, ('DEV_NAME', dev_name))    
               if 'INIT_CODE' not in names_par:
                   sev_changes.insert(3, ('INIT_CODE', init_code)) 
               if 'PROD_GUID' not in names_par:
                   sev_changes.insert(4, ('PROD_GUID', product_guid)) 
               if 'PROD_V_GUID' not in names_par:
                   sev_changes.insert(5, ('PROD_V_GUID', product_version_guid))                  
                   
        return sev_changes
     
    def gui_seq():
        
        print("Sequence info panel")   
        
        sev_changes = []
        
        seq_tot_number = 2
        seq_index = 0
        seq_exec = 1        
        adv_mode_def = "Auto"
        
        gain_auto = "Off"        
        gain_sel = "All"
        black_level_sel = "All"
        
        gamma_en = 0
        opt_gamma_sel = "User"
        gamma = 1
        
        image_viewer_coloumn = [
            
            [sg.Text("Sequence set total number: " )],
            [sg.Input(default_text= str(seq_tot_number), size=(19, 1), key="SEQ_TOT")],    ## , sg.Button('Copy')]
            [sg.Text("Sequence set index: ")],
            [sg.Input(default_text= str(seq_index), size=(19, 1), key="SEQ_INDEX")],
            [sg.Text("Sequence set executions: ")],
            [sg.Input(default_text= str(seq_exec), size=(19, 1), key="SEQ_EXEC")],
            [sg.Text("Sequence set advance mode: ")],
            [sg.Input(default_text= adv_mode_def, size=(19, 1), key="SEQ_ADV")]            
        ]
         
        
        image_viewer_coloumn_sec = [            
            [sg.Text("Gain auto: " )],
            [sg.Input(default_text= gain_auto, size=(19, 1), key="GAIN_AUTO")],    ## , sg.Button('Copy')]
            [sg.Text("Gain selector: ")],
            [sg.Input(default_text= gain_sel, size=(19, 1), key="GAIN_SEL")],
            [sg.Text("Black level selector: ")],
            [sg.Input(default_text= black_level_sel, size=(19, 1), key="BLACK_LEV_SEL")]
        ] 
         
        image_viewer_coloumn_third = [
            [sg.Text("Gamma enable: " )],
            [sg.Input(default_text= str(gamma_en), size=(19, 1), key="GAMMA_EN")],    ## , sg.Button('Copy')]
            [sg.Text("Gamma selector: ")],
            [sg.Input(default_text= opt_gamma_sel, size=(19, 1), key="GAMMA_SEL")],
            [sg.Text("Gamma: ")],
            [sg.Input(default_text= str(gamma), size=(19, 1), key="GAMMA")]
        ]   
        
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ]
         
        layout = [
            [
                sg.Column(image_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_sec),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_third),
                sg.VSeparator(),
                sg.Column(third_layout)
            ]
        ]
        
        window = sg.Window("1st Group properties", layout, modal=True)    
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save":
               
               if values['SEQ_TOT'] != str(seq_tot_number):  
                   print("Saving seq_tot with new value")
                   sev_changes.append(('SEQ_TOT', values['SEQ_TOT']))
               else:
                   print("Saving seq_tot") 
                   sev_changes.append(('SEQ_TOT', str(seq_tot_number)))
                   
               if values['SEQ_INDEX'] != str(seq_index): 
                   print("Saving seq_index with new value")
                   sev_changes.append(('SEQ_INDEX', values['SEQ_INDEX']))
               else:
                   print("Saving seq_index") 
                   sev_changes.append(('SEQ_INDEX', str(seq_index)))
                    
               if values['SEQ_EXEC'] != str(seq_exec): 
                   print("Saving seq_exec with new value")
                   sev_changes.append(('SEQ_EXEC', values['SEQ_EXEC']))
               else:
                   print("Saving seq_exec") 
                   sev_changes.append(('SEQ_EXEC', str(seq_exec)))  
                   
               if values['SEQ_ADV'] != adv_mode_def: 
                   print("Saving seq_adv with new value")
                   sev_changes.append(('SEQ_ADV', values['SEQ_ADV']))
               else:
                   print("Saving seq_exec")  
                   sev_changes.append(('SEQ_ADV', adv_mode_def))
                   
               if values['GAIN_AUTO'] != gain_auto: 
                   print("Saving gain_auto with new value")
                   sev_changes.append(('GAIN_AUTO', values['GAIN_AUTO']))
               else:
                   print("Saving gain_auto")  
                   sev_changes.append(('GAIN_AUTO', gain_auto))
                   
               if values['GAIN_SEL'] != gain_sel: 
                   print("Saving gain_sel with new value")
                   sev_changes.append(('GAIN_SEL', values['GAIN_SEL']))
               else:
                   print("Saving gain_sel")  
                   sev_changes.append(('GAIN_SEL', gain_sel))  
                    
               if values['BLACK_LEV_SEL'] != black_level_sel: 
                   print("Saving black_lev_sel with new value")
                   sev_changes.append(('BLACK_LEV_SEL', values['BLACK_LEV_SEL']))
               else:
                   print("Saving black_lev_sel") 
                   sev_changes.append(('BLACK_LEV_SEL', black_level_sel)) 
                    
               if values['GAMMA_EN'] != str(gamma_en): 
                   print("Saving gamma_en with new value")
                   sev_changes.append(('GAMMA_EN', values['GAMMA_EN'])) 
               else:
                   print("Saving gamma_en") 
                   sev_changes.append(('GAMMA_EN', str(gamma_en)))
                   
               if values['GAMMA_SEL'] != opt_gamma_sel: 
                   print("Saving gamma_sel with new value")
                   sev_changes.append(('GAMMA_SEL', values['GAMMA_SEL']))
               else:
                   print("Saving gamma_sel") 
                   sev_changes.append(('GAMMA_SEL', opt_gamma_sel)) 
                   
               if values['GAMMA'] != str(gamma):
                   print("Saving gamma with new value")
                   sev_changes.append(('GAMMA', values['GAMMA']))   
               else:
                   print("Saving gamma") 
                   sev_changes.append(('GAMMA', str(gamma))) 
                    
               break
           
        window.close()
        
        names_par = []
        
        if len(sev_changes) < 10:
            
          
        
                for ind_ch, change in enumerate(sev_changes):
                   (name_p, val_p) = change
                   
                   names_par.append(name_p)
                
                if True:         
                    
                   if 'SEQ_TOT' not in names_par:
                       sev_changes.insert(0, ('SEQ_TOT', str(seq_tot_number)))                      
                   if 'SEQ_INDEX' not in names_par: 
                       sev_changes.insert(1, ('SEQ_INDEX', str(seq_index)))
                   if 'SEQ_EXEC' not in names_par:
                       sev_changes.insert(2, ('SEQ_EXEC', str(seq_exec)))    
                   if 'SEQ_ADV' not in names_par:
                       sev_changes.insert(3, ('SEQ_ADV', adv_mode_def)) 
                   if 'GAIN_AUTO' not in names_par:
                       sev_changes.insert(4, ('GAIN_AUTO', gain_auto)) 
                   if 'GAIN_SEL' not in names_par:
                       sev_changes.insert(5, ('GAIN_SEL', gain_sel)) 
                   if 'BLACK_LEV_SEL' not in names_par:
                       sev_changes.insert(6, ('BLACK_LEV_SEL', black_level_sel)) 
                   if 'GAMMA_EN' not in names_par:
                       sev_changes.insert(7, ('GAMMA_EN', str(gamma_en))) 
                   if 'GAMMA_SEL' not in names_par: 
                       sev_changes.insert(8, ('GAMMA_SEL', opt_gamma_sel))
                   if 'GAMMA' not in names_par:
                       sev_changes.insert(9, ('GAMMA', str(gamma)))    
                   
        return sev_changes 
    
    def gui_t():       
        
        sev_changes = []
        
        dig_shift = 0
        pix_format_def = "Mono8"
        reversx = 0
        test_image_sel = "Off"
        
        offset_x = 0
        offset_y = 0
        center_x = 0
        center_y = 0
        
        bin_mode_horiz = "Summing"        
        bin_mode_vert = "Summing"
        bin_horiz = 1
        bin_vert = 1
        
        image_viewer_coloumn = [
            
            [sg.Text("Digital shift: " )],
            [sg.Input(default_text= str(dig_shift), size=(19, 1), key="DIG_SHIFT")],    
            [sg.Text("Pixel format: " )],
            [sg.Input(default_text= pix_format_def, size=(19, 1), key="PIX_FORMAT")],
            [sg.Text("Reverse X: " )],
            [sg.Input(default_text= str(reversx), size=(19, 1), key="REV_X")],
            [sg.Text("Test image selector: " )],
            [sg.Input(default_text= test_image_sel, size=(19, 1), key="TEST_IMAGE_SEL")]            
        ]  
        
        image_viewer_coloumn_sec = [
            [sg.Text("Offset X: " )],
            [sg.Input(default_text= str(offset_x), size=(19, 1), key="OFFSET_X")],    
            [sg.Text("Offset Y: " )],
            [sg.Input(default_text= str(offset_y), size=(19, 1), key="OFFSET_Y")],
            [sg.Text("Center X: " )],
            [sg.Input(default_text= str(center_x), size=(19, 1), key="CENTER_X")],
            [sg.Text("Center Y: " )],
            [sg.Input(default_text= str(center_y), size=(19, 1), key="CENTER_Y")]            
        ] 
        
        image_viewer_coloumn_third = [
            [sg.Text("Binning mode horizontal: " )],
            [sg.Input(default_text= bin_mode_horiz, size=(19, 1), key="BIN_MODE_H")],    
            [sg.Text("Binning horizontal: " )],
            [sg.Input(default_text= str(bin_horiz), size=(19, 1), key="BIN_H")],
            [sg.Text("Binning mode vertical: " )],
            [sg.Input(default_text= bin_mode_vert, size=(19, 1), key="BIN_MODE_V")],
            [sg.Text("Binning vertical: " )],
            [sg.Input(default_text= str(bin_vert), size=(19, 1), key="BIN_V")]
        ]        
        
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ]
        
        layout = [ 
            [
                sg.Column(image_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_sec),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_third),
                sg.VSeparator(),
                sg.Column(third_layout)
            ]
        ]
        
        window = sg.Window("2nd Group properties", layout, modal=True)    
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save": 
               
               if values['DIG_SHIFT'] != str(dig_shift):  
                   sev_changes.append(('DIG_SHIFT', values['DIG_SHIFT']))
               else:
                   sev_changes.append(('DIG_SHIFT', str(dig_shift))) 
                   
               if values['PIX_FORMAT'] != pix_format_def:  
                   sev_changes.append(('PIX_FORMAT', values['PIX_FORMAT']))
               else:
                   sev_changes.append(('PIX_FORMAT', pix_format_def))
                   
               if values['REV_X'] != str(reversx):   
                   sev_changes.append(('REV_X', values['REV_X']))
               else:
                   sev_changes.append(('REV_X', str(reversx)))
                   
               if values['TEST_IMAGE_SEL'] != test_image_sel:  
                   sev_changes.append(('TEST_IMAGE_SEL', values['TEST_IMAGE_SEL']))
               else:
                   sev_changes.append(('TEST_IMAGE_SEL', test_image_sel))
                   
               if values['OFFSET_X'] != str(offset_x):  
                   sev_changes.append(('OFFSET_X', values['OFFSET_X']))
               else:
                   sev_changes.append(('OFFSET_X', str(offset_x)))
                   
               if values['OFFSET_Y'] != str(offset_y):  
                   sev_changes.append(('OFFSET_Y', values['OFFSET_Y']))
               else:
                   sev_changes.append(('OFFSET_Y', str(offset_y))) 
                   
               if values['CENTER_X'] != str(center_x):  
                   sev_changes.append(('CENTER_X', values['CENTER_X']))
               else:
                   sev_changes.append(('CENTER_X', str(center_x)))
                   
               if values['CENTER_Y'] != str(center_y):  
                   sev_changes.append(('CENTER_Y', values['CENTER_Y']))
               else:
                   sev_changes.append(('CENTER_Y', str(center_y)))  
                   
               if values['BIN_MODE_H'] != bin_mode_horiz:  
                   sev_changes.append(('BIN_MODE_H', values['BIN_MODE_H']))
               else:
                   sev_changes.append(('BIN_MODE_H', bin_mode_horiz))
                   
               if values['BIN_MODE_V'] != bin_mode_vert:  
                   sev_changes.append(('BIN_MODE_V', values['BIN_MODE_V']))
               else:
                   sev_changes.append(('BIN_MODE_V', bin_mode_vert))
                   
               if values['BIN_H'] != str(bin_horiz):   
                   sev_changes.append(('BIN_H', values['BIN_H']))
               else:
                   sev_changes.append(('BIN_H', str(bin_horiz)))
                   
               if values['BIN_V'] != str(bin_vert):  
                   sev_changes.append(('BIN_V', values['BIN_V']))
               else:
                   sev_changes.append(('BIN_V', str(bin_vert)))
                   
               break   
           
        window.close()  
        
        names_par = []
        
        if len(sev_changes) < 12:
            
            for ind_ch, change in enumerate(sev_changes):
               (name_p, val_p) = change
               
               names_par.append(name_p)          
        
            if True: 
                 
               if 'DIG_SHIFT' not in names_par:               
                   sev_changes.insert(0, ('DIG_SHIFT', str(dig_shift)))
               if 'PIX_FORMAT' not in names_par:
                   sev_changes.insert(1, ('PIX_FORMAT', pix_format_def))
               if 'REV_X' not in names_par:
                   sev_changes.insert(2, ('REV_X', str(reversx)))    
               if 'TEST_IMAGE_SEL' not in names_par:
                   sev_changes.insert(3, ('TEST_IMAGE_SEL', test_image_sel)) 
               if 'OFFSET_X' not in names_par:
                   sev_changes.insert(4, ('OFFSET_X', str(offset_x))) 
               if 'OFFSET_Y' not in names_par:
                   sev_changes.insert(5, ('OFFSET_Y', str(offset_y))) 
               if 'CENTER_X' not in names_par:
                   sev_changes.insert(6, ('CENTER_X', str(center_x))) 
               if 'CENTER_Y' not in names_par:
                   sev_changes.insert(7, ('CENTER_Y', str(center_y))) 
               if 'BIN_MODE_H' not in names_par:
                   sev_changes.insert(8, ('BIN_MODE_H', bin_mode_horiz))
               if 'BIN_MODE_V' not in names_par: 
                   sev_changes.insert(9, ('BIN_MODE_V', bin_mode_vert))
               if 'BIN_H' not in names_par:
                   sev_changes.insert(10, ('BIN_H', str(bin_horiz)))
               if 'BIN_V' not in names_par:
                   sev_changes.insert(11, ('BIN_V', str(bin_vert)))
                        
        return sev_changes
   
    def gui_fourth():
        
        sev_changes = []
        
        acq_frame_count = 1
        trigger_sel_one = "AcquisitionStart"
        trigger_sel_two = "FrameStart"
        trigger_mode = "Off"
        trigger_source = "Line1" 
        trigger_activation = "RisingEdge"
        trigger_delay_abs = 0
        
        exp_mode = "Time"
        exp_auto = "Off"
        shutter_mode = "GlobalResetRelease"
        acq_frame_rate_en = 0
        
        image_viewer_coloumn = [
            
            [sg.Text("Acquisition frame count: " )],
            [sg.Input(default_text= str(acq_frame_count), size=(19, 1), key="ACQ_FRAME_COUNT")],    
            [sg.Text("Trigger selector 1: " )],
            [sg.Input(default_text= trigger_sel_one, size=(19, 1), key="TRIG_SEL_ONE")],
            [sg.Text("Trigger selector 2: " )],
            [sg.Input(default_text= trigger_sel_two, size=(19, 1), key="TRIG_SEL_TWO")],
            [sg.Text("Trigger mode: " )],
            [sg.Input(default_text= trigger_mode, size=(19, 1), key="TRIGGER_MODE")],
            [sg.Text("Trigger source: " )],
            [sg.Input(default_text= trigger_source, size=(19, 1), key="TRIG_SOURCE")],
            [sg.Text("Trigger activation: " )],
            [sg.Input(default_text= trigger_activation, size=(19, 1), key="TRIG_ACTIV")],
            [sg.Text("Trigger delay (abs): " )],
            [sg.Input(default_text= str(trigger_delay_abs), size=(19, 1), key="TRIG_DELAY_ABS")],
        ] 
                
        image_viewer_coloumn_sec = [
            [sg.Text("Exposure mode: " )],
            [sg.Input(default_text= exp_mode, size=(19, 1), key="EXP_MODE")],    
            [sg.Text("Exposure auto: " )],
            [sg.Input(default_text= exp_auto, size=(19, 1), key="EXP_AUTO")],
            [sg.Text("Shutter mode: " )],
            [sg.Input(default_text= shutter_mode, size=(19, 1), key="SHUTTER_MODE")],
            [sg.Text("Acquisition frame-rate enable: " )],
            [sg.Input(default_text= str(acq_frame_rate_en), size=(19, 1), key="ACQ_FR_EN")]            
        ] 
         
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ]
        
        
        layout = [
            [
                sg.Column(image_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_sec),
                sg.VSeparator(),               
                sg.Column(third_layout)
            ]
        ]
        
        
        window = sg.Window("3rd Group properties", layout, modal=True)    
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save": 
                
               if values['ACQ_FRAME_COUNT'] != str(acq_frame_count):  
                   sev_changes.append(('ACQ_FRAME_COUNT', values['ACQ_FRAME_COUNT']))
               else:
                   sev_changes.append(('ACQ_FRAME_COUNT', str(acq_frame_count))) 
                   
               if values['TRIG_SEL_ONE'] != trigger_sel_one:  
                   sev_changes.append(('TRIG_SEL_ONE', values['TRIG_SEL_ONE']))
               else:
                   sev_changes.append(('TRIG_SEL_ONE', trigger_sel_one)) 
                    
               if values['TRIG_SEL_TWO'] != trigger_sel_two:  
                   sev_changes.append(('TRIG_SEL_TWO', values['TRIG_SEL_TWO']))
               else:
                   sev_changes.append(('TRIG_SEL_TWO', trigger_sel_two))  
                   
               if values['TRIGGER_MODE'] != trigger_mode:  
                   sev_changes.append(('TRIGGER_MODE', values['TRIGGER_MODE']))
               else:
                   sev_changes.append(('TRIGGER_MODE', trigger_mode)) 
                    
               if values['TRIG_SOURCE'] != trigger_source:  
                   sev_changes.append(('TRIG_SOURCE', values['TRIG_SOURCE']))
               else:
                   sev_changes.append(('TRIG_SOURCE', trigger_source))  
                   
               if values['TRIG_ACTIV'] != trigger_activation:  
                   sev_changes.append(('TRIG_ACTIV', values['TRIG_ACTIV']))
               else:
                   sev_changes.append(('TRIG_ACTIV', trigger_activation))
                   
               if values['TRIG_DELAY_ABS'] != str(trigger_delay_abs):  
                   sev_changes.append(('TRIG_DELAY_ABS', values['TRIG_DELAY_ABS']))
               else:
                   sev_changes.append(('TRIG_DELAY_ABS', str(trigger_delay_abs))) 
                   
               if values['EXP_MODE'] != exp_mode:   
                   sev_changes.append(('EXP_MODE', values['EXP_MODE']))
               else:
                   sev_changes.append(('EXP_MODE', exp_mode)) 
                   
               if values['EXP_AUTO'] != exp_auto:  
                   sev_changes.append(('EXP_AUTO', values['EXP_AUTO']))
               else:
                   sev_changes.append(('EXP_AUTO', exp_auto))
                   
               if values['SHUTTER_MODE'] != shutter_mode:  
                   sev_changes.append(('SHUTTER_MODE', values['SHUTTER_MODE']))
               else:
                   sev_changes.append(('SHUTTER_MODE', shutter_mode))     
                  
               if values['ACQ_FR_EN'] != str(acq_frame_rate_en):  
                   sev_changes.append(('ACQ_FR_EN', values['ACQ_FR_EN']))    
               else:
                   sev_changes.append(('ACQ_FR_EN', str(acq_frame_rate_en)))
                   
               break     
            
        window.close()
        
        names_par = []
        
        if len(sev_changes) < 11:
            
            for ind_ch, change in enumerate(sev_changes):
               (name_p, val_p) = change
               
               names_par.append(name_p)          
        
            if True: 
                
               if 'ACQ_FRAME_COUNT' not in names_par:               
                   sev_changes.insert(0, ('ACQ_FRAME_COUNT', str(acq_frame_count)))
               if 'TRIG_SEL_ONE' not in names_par:
                   sev_changes.insert(1, ('TRIG_SEL_ONE', trigger_sel_one))
               if 'TRIG_SEL_TWO' not in names_par: 
                   sev_changes.insert(2, ('TRIG_SEL_TWO', trigger_sel_two))    
               if 'TRIGGER_MODE' not in names_par:
                   sev_changes.insert(3, ('TRIGGER_MODE', trigger_mode)) 
               if 'TRIG_SOURCE' not in names_par:
                   sev_changes.insert(4, ('TRIG_SOURCE', trigger_source)) 
               if 'TRIG_ACTIV' not in names_par:
                   sev_changes.insert(5, ('TRIG_ACTIV', trigger_activation)) 
               if 'TRIG_DELAY_ABS' not in names_par:
                   sev_changes.insert(6, ('TRIG_DELAY_ABS', str(trigger_delay_abs))) 
               if 'EXP_MODE' not in names_par:
                   sev_changes.insert(7, ('EXP_MODE', exp_mode)) 
               if 'EXP_AUTO' not in names_par:
                   sev_changes.insert(8, ('EXP_AUTO', exp_auto))
               if 'SHUTTER_MODE' not in names_par: 
                   sev_changes.insert(9, ('SHUTTER_MODE', shutter_mode))
               if 'ACQ_FR_EN' not in names_par:
                   sev_changes.insert(10, ('ACQ_FR_EN', str(acq_frame_rate_en)))               
         
        return sev_changes         
         
    def gui_fifth():
        
        sev_changes = []          
        
        line_sel_one = "line1"        
        line_sel_two = "Out1"
        line_mode_in = "Input"
        line_mode_out = "Output" 
        line_format = "OctoCoupled"
        line_source = "UserOutput"
        line_inv = 0
        line_deb_time = 1000
        minout_pulse = 0
        
        counter_sel_one = "Counter1"
        counter_sel_two = "Counter2"
        counter_ev_source_one = "FrameTrigger"
        counter_ev_source_two = "FrameStart"
        counter_reset_source = "Off"
        
        image_viewer_coloumn = [ 
              
              [sg.Text("Line selector 1: " )],
              [sg.Input(default_text= line_sel_one, size=(19, 1), key="LINE_SEL_ONE")],    
              [sg.Text("Line selector 2: " )], 
              [sg.Input(default_text= line_sel_two, size=(19, 1), key="LINE_SEL_TWO")],
              [sg.Text("Line mode 1: " )],
              [sg.Input(default_text= line_mode_in, size=(19, 1), key="LINE_MODE_ONE")],
              [sg.Text("Line mode 2: " )], 
              [sg.Input(default_text= line_mode_out, size=(19, 1), key="LINE_MODE_TWO")],
              [sg.Text("Line format: " )],
              [sg.Input(default_text= line_format, size=(19, 1), key="LINE_FORMAT")],
              [sg.Text("Line source: " )],
              [sg.Input(default_text= line_source, size=(19, 1), key="LINE_SOURCE")],
              [sg.Text("Line inverter: " )], 
              [sg.Input(default_text= str(line_inv), size=(19, 1), key="LINE_INV")],
              [sg.Text("Line debouncer time: " )],
              [sg.Input(default_text= str(line_deb_time), size=(19, 1), key="LINE_DEB_TIME")],
              [sg.Text("Min. out pulse width: " )],
              [sg.Input(default_text= str(minout_pulse), size=(19, 1), key="LINE_MINOUT_PULSE")]
        ]
        
        
        
        image_viewer_coloumn_sec = [
              
              [sg.Text("Counter selector 1: " )],
              [sg.Input(default_text= counter_sel_one, size=(19, 1), key="COUNTER_SEL_ONE")],    
              [sg.Text("Counter selector 2: " )],
              [sg.Input(default_text= counter_sel_two, size=(19, 1), key="COUNTER_SEL_TWO")],
              [sg.Text("Counter event source 1: " )],
              [sg.Input(default_text= counter_ev_source_one, size=(19, 1), key="COUNT_EV_SOURCE_ONE")],
              [sg.Text("Counter event source 2: " )],
              [sg.Input(default_text= counter_ev_source_two, size=(19, 1), key="COUNT_EV_SOURCE_TWO")],
              [sg.Text("Counter reset source: " )],
              [sg.Input(default_text= counter_reset_source, size=(19, 1), key="COUNTER_RESET_SOURCE")]
        ]
         
        
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ] 
        
        
        layout = [
            [
                sg.Column(image_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_sec),
                sg.VSeparator(),               
                sg.Column(third_layout)
            ]
        ]  
        
        window = sg.Window("4th Group properties", layout, modal=True)    
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save": 
               
               if values['LINE_SEL_ONE'] != line_sel_one:  
                   sev_changes.append(('LINE_SEL_ONE', values['LINE_SEL_ONE']))
               else:
                   sev_changes.append(('LINE_SEL_ONE', line_sel_one))
                   
               if values['LINE_SEL_TWO'] != line_sel_two:  
                   sev_changes.append(('LINE_SEL_TWO', values['LINE_SEL_TWO']))
               else:
                   sev_changes.append(('LINE_SEL_TWO', line_sel_two))
                   
               if values['LINE_MODE_ONE'] != line_mode_in:  
                   sev_changes.append(('LINE_MODE_ONE', values['LINE_MODE_ONE']))
               else:
                   sev_changes.append(('LINE_MODE_ONE', line_mode_in))
                   
               if values['LINE_MODE_TWO'] != line_mode_out:  
                   sev_changes.append(('LINE_MODE_TWO', values['LINE_MODE_TWO']))
               else:
                   sev_changes.append(('LINE_MODE_TWO', line_mode_out))
                   
               if values['LINE_FORMAT'] != line_format:  
                   sev_changes.append(('LINE_FORMAT', values['LINE_FORMAT']))
               else:
                   sev_changes.append(('LINE_FORMAT', line_format))  
                    
               if values['LINE_SOURCE'] != line_source:  
                   sev_changes.append(('LINE_SOURCE', values['LINE_SOURCE']))
               else:
                   sev_changes.append(('LINE_SOURCE', line_source))
                   
               if values['LINE_INV'] != str(line_inv):  
                   sev_changes.append(('LINE_INV', values['LINE_INV']))
               else:
                   sev_changes.append(('LINE_INV', str(line_inv)))  
                   
               if values['LINE_DEB_TIME'] != str(line_deb_time):   
                   sev_changes.append(('LINE_DEB_TIME', values['LINE_DEB_TIME']))
               else:
                   sev_changes.append(('LINE_DEB_TIME', str(line_deb_time))) 
                   
               if values['LINE_MINOUT_PULSE'] != str(minout_pulse):  
                   sev_changes.append(('LINE_MINOUT_PULSE', values['LINE_MINOUT_PULSE']))
               else:
                   sev_changes.append(('LINE_MINOUT_PULSE', str(minout_pulse)))  
                   
               if values['COUNTER_SEL_ONE'] != counter_sel_one:  
                   sev_changes.append(('COUNTER_SEL_ONE', values['COUNTER_SEL_ONE']))
               else:
                   sev_changes.append(('COUNTER_SEL_ONE', counter_sel_one))
                   
               if values['COUNTER_SEL_TWO'] != counter_sel_two:                 
                   sev_changes.append(('COUNTER_SEL_TWO', values['COUNTER_SEL_TWO']))  
               else:
                   sev_changes.append(('COUNTER_SEL_TWO', counter_sel_two))
                   
               if values['COUNT_EV_SOURCE_ONE'] != counter_ev_source_one:  
                   sev_changes.append(('COUNT_EV_SOURCE_ONE', values['COUNT_EV_SOURCE_ONE']))
               else:
                   sev_changes.append(('COUNT_EV_SOURCE_ONE', counter_ev_source_one))
                   
               if values['COUNT_EV_SOURCE_TWO'] != counter_ev_source_two:  
                   sev_changes.append(('COUNT_EV_SOURCE_TWO', values['COUNT_EV_SOURCE_TWO']))
               else:
                   sev_changes.append(('COUNT_EV_SOURCE_TWO', counter_ev_source_two))
                   
               if values['COUNTER_RESET_SOURCE'] != counter_reset_source:
                   sev_changes.append(('COUNTER_RESET_SOURCE', values['COUNTER_RESET_SOURCE']))
               else:
                   sev_changes.append(('COUNTER_RESET_SOURCE', counter_reset_source))
                     
               break   
           
        window.close()
        
        names_par = []
        
        if len(sev_changes) < 14:
        
           for ind_ch, change in enumerate(sev_changes):
              (name_p, val_p) = change
              
              names_par.append(name_p)          
       
           if True: 
               
               if 'LINE_SEL_ONE' not in names_par:                
                   sev_changes.insert(0, ('LINE_SEL_ONE', line_sel_one))
               if 'LINE_SEL_TWO' not in names_par:
                   sev_changes.insert(1, ('LINE_SEL_TWO', line_sel_two))
               if 'LINE_MODE_ONE' not in names_par:
                   sev_changes.insert(2, ('LINE_MODE_ONE', line_mode_in))    
               if 'LINE_MODE_TWO' not in names_par:
                   sev_changes.insert(3, ('LINE_MODE_TWO', line_mode_out)) 
               if 'LINE_FORMAT' not in names_par: 
                   sev_changes.insert(4, ('LINE_FORMAT', line_format)) 
               if 'LINE_SOURCE' not in names_par:
                   sev_changes.insert(5, ('LINE_SOURCE', line_source)) 
               if 'LINE_INV' not in names_par:
                   sev_changes.insert(6, ('LINE_INV', str(line_inv))) 
               if 'LINE_DEB_TIME' not in names_par:
                   sev_changes.insert(7, ('LINE_DEB_TIME', str(line_deb_time))) 
               if 'LINE_MINOUT_PULSE' not in names_par:
                   sev_changes.insert(8, ('LINE_MINOUT_PULSE', str(minout_pulse)))
               if 'COUNTER_SEL_ONE' not in names_par:
                   sev_changes.insert(9, ('COUNTER_SEL_ONE', counter_sel_one))  
               if 'COUNTER_SEL_TWO' not in names_par:
                   sev_changes.insert(10, ('COUNTER_SEL_TWO', counter_sel_two))
               if 'COUNT_EV_SOURCE_ONE' not in names_par:
                   sev_changes.insert(11, ('COUNT_EV_SOURCE_ONE', counter_ev_source_one))
               if 'COUNT_EV_SOURCE_TWO' not in names_par:
                   sev_changes.insert(12, ('COUNT_EV_SOURCE_TWO', counter_ev_source_two))
               if 'COUNTER_RESET_SOURCE' not in names_par:
                   sev_changes.insert(13, ('COUNTER_RESET_SOURCE', counter_reset_source))  
        
        return sev_changes 
    
    
    
    def gui_sixth():
        
        sev_changes = []
        
        lut_sel = "Luminance"
        lut_value_all = ""
        lut_en  = 0
        
        length_lut = len(lut_value_all)
        
     ##   print(len(lut_value_all))
        
        lut_value_abr = lut_value_all[:5] + " ... " + lut_value_all[length_lut-5] + lut_value_all[length_lut-4] + lut_value_all[length_lut-3] + lut_value_all[length_lut-2] + lut_value_all[length_lut-1]
        
        gev_stream_channel_sel = "StreamChannel0"
    
        auto_target_value = 128
        gray_adjust = 700
        bal_white_adjust = 1000
        
        auto_gain_lower = 0
        auto_gain_upper = 63
        
        auto_exp_lower = 70
        auto_exp_upper = 350000
        
        auto_func_prof = "GainMinimum"
        auto_func_aoi_width = 1920
        auto_func_aoi_height = 1080
        auto_func_aoi_offset_x = 0
        auto_func_aoi_offset_y = 0
      
        user_defined_val_sel_t = "User defined value selector"
        user_defined_val_t = "User defined value"
        
        
        user_def_value_sel_one = "Value1"
        user_def_value_sel_two = "Value2"
        user_def_value_sel_three = "Value3"  
        user_def_value_sel_four = "Value4" 
        user_def_value_sel_five = "Value5" 
         
        user_defined_value_one = 0
        user_defined_value_two = 0
        user_defined_value_three = 0
        user_defined_value_four = 0
        user_defined_value_five = 0
        
        
        image_viewer_coloumn = [   ## Change all keys 
              
              [sg.Text("LUT selector: " )],
              [sg.Input(default_text= lut_sel, size=(19, 1), key="LUT_SEL")],    
              [sg.Text("LUT value: " )],
              [sg.Input(default_text= lut_value_abr, size=(19, 1), key="LUT_VAL")],
              [sg.Text("LUT Enable: " )],
              [sg.Input(default_text= str(lut_en), size=(19, 1), key="LUT_EN")],
              [sg.Text("Gev. stream channel selector: " )],  
              [sg.Input(default_text= gev_stream_channel_sel, size=(19, 1), key="GEVS_CHANNEL_SEL")],
              [sg.Text("Auto target value: " )],   
              [sg.Input(default_text= str(auto_target_value), size=(19, 1), key="AUTO_TARGET")], 
              [sg.Text("Grey value adjustment damping: " )],
              [sg.Input(default_text= str(gray_adjust), size=(19, 1), key="GREY_ADJUST")],
              [sg.Text("Balance white adjustement damping: " )],
              [sg.Input(default_text= str(bal_white_adjust), size=(19, 1), key="BAL_ADJUST")], 
              [sg.Text("Auto gain lower: " ), sg.Text("Auto gain upper: " )],
              [sg.Input(default_text= str(auto_gain_lower), size=(19, 1), key="GAIN_LOW"), sg.Input(default_text= str(auto_gain_upper), size=(19, 1), key="GAIN_UP")],
              [sg.Text("Exposure time lower: " ), sg.Text("Exposure time upper: " )],
              [sg.Input(default_text= str(auto_exp_lower), size=(19, 1), key="EXP_LOW"), sg.Input(default_text= str(auto_exp_upper), size=(19, 1), key="EXP_UP")]
        ]    
             
        image_viewer_coloumn_sec = [  
            [sg.Text("Auto function profile: " )],
            [sg.Input(default_text= auto_func_prof, size=(19, 1), key="AUTO_FUNC_PROF")],
            [sg.Text("Auto function AOI Width: " ), sg.Text("Auto function AOI Height: " )],
            [sg.Input(default_text= str(auto_func_aoi_width), size=(19, 1), key="AOI_WIDTH"), sg.Input(default_text= str(auto_func_aoi_height), size=(19, 1), key="AOI_HEIGHT")],
            [sg.Text("Auto function AOI Offset X: " ), sg.Text("Auto function AOI Offset Y: " )],
            [sg.Input(default_text= str(auto_func_aoi_offset_x), size=(19, 1), key="AOI_OFFSETX"), sg.Input(default_text= str(auto_func_aoi_offset_y), size=(19, 1), key="AOI_OFFSETY")],            
            [sg.Text(user_defined_val_sel_t + ": " ), sg.Text(user_defined_val_t + ": " )],
            [sg.Input(default_text= user_def_value_sel_one, size=(19, 1), key="NAME_DEF_VALUE1"), sg.Input(default_text= str(user_defined_value_one), size=(19, 1), key="DEF_VALUE1")],
            [sg.Input(default_text= user_def_value_sel_two, size=(19, 1), key="NAME_DEF_VALUE2"), sg.Input(default_text= str(user_defined_value_two), size=(19, 1), key="DEF_VALUE2")],
            [sg.Input(default_text= user_def_value_sel_three, size=(19, 1), key="NAME_DEF_VALUE3"), sg.Input(default_text= str(user_defined_value_three), size=(19, 1), key="DEF_VALUE3")],
            [sg.Input(default_text= user_def_value_sel_four, size=(19, 1), key="NAME_DEF_VALUE4"), sg.Input(default_text= str(user_defined_value_four), size=(19, 1), key="DEF_VALUE4")],
            [sg.Input(default_text= user_def_value_sel_five, size=(19, 1), key="NAME_DEF_VALUE5"), sg.Input(default_text= str(user_defined_value_five), size=(19, 1), key="DEF_VALUE5")]
        ]
         
        
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ] 
         
        
        layout = [
            [
                sg.Column(image_viewer_coloumn),
                sg.VSeparator(),
                sg.Column(image_viewer_coloumn_sec),
                sg.VSeparator(),               
                sg.Column(third_layout)
            ]
        ]  
        
        window = sg.Window("5th Group properties", layout, modal=True)    
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save": 
               
               if values['LUT_SEL'] != lut_sel:  
                   sev_changes.append(('LUT_SEL', values['LUT_SEL']))
               else:
                   sev_changes.append(('LUT_SEL', lut_sel))
                    
               if values['LUT_VAL'] != lut_value_abr:  
                   sev_changes.append(('LUT_VAL', values['LUT_VAL']))
               else:
                   sev_changes.append(('LUT_VAL', lut_value_abr)) 
                   
               if values['LUT_EN'] != str(lut_en):  
                   sev_changes.append(('LUT_EN', values['LUT_EN']))
               else:
                   sev_changes.append(('LUT_EN', str(lut_en)))
                   
               if values['GEVS_CHANNEL_SEL'] != gev_stream_channel_sel:  
                   sev_changes.append(('GEVS_CHANNEL_SEL', values['GEVS_CHANNEL_SEL']))
               else:
                   sev_changes.append(('GEVS_CHANNEL_SEL', gev_stream_channel_sel)) 
                   
               if values['AUTO_TARGET'] != str(auto_target_value):  
                   sev_changes.append(('AUTO_TARGET', values['AUTO_TARGET']))
               else:
                   sev_changes.append(('AUTO_TARGET', str(auto_target_value)))
                   
               if values['GREY_ADJUST'] != str(gray_adjust):   
                   sev_changes.append(('GREY_ADJUST', values['GREY_ADJUST']))
               else:
                   sev_changes.append(('GREY_ADJUST', str(gray_adjust)))
                   
               if values['BAL_ADJUST'] != str(bal_white_adjust):   
                   sev_changes.append(('BAL_ADJUST', values['BAL_ADJUST']))
               else:
                   sev_changes.append(('BAL_ADJUST', str(bal_white_adjust)))
                   
               if values['GAIN_LOW'] != str(auto_gain_lower):   
                   sev_changes.append(('GAIN_LOW', values['GAIN_LOW']))
               else:
                   sev_changes.append(('GAIN_LOW', str(auto_gain_lower))) 
                   
               if values['GAIN_UP'] != str(auto_gain_upper):  
                   sev_changes.append(('GAIN_UP', values['GAIN_UP']))
               else:
                   sev_changes.append(('GAIN_UP', str(auto_gain_upper)))  
                   
               if values['EXP_LOW'] != str(auto_exp_lower):  
                   sev_changes.append(('EXP_LOW', values['EXP_LOW']))
               else:
                   sev_changes.append(('EXP_LOW', str(auto_exp_lower)))  
                   
               if values['EXP_UP'] != str(auto_exp_upper):                 
                   sev_changes.append(('EXP_UP', values['EXP_UP']))
               else:
                   sev_changes.append(('EXP_UP', str(auto_exp_upper))) 
                   
               if values['AUTO_FUNC_PROF'] != auto_func_prof:  
                   sev_changes.append(('AUTO_FUNC_PROF', values['AUTO_FUNC_PROF']))
               else:
                   sev_changes.append(('AUTO_FUNC_PROF', auto_func_prof))  
                    
               if values['AOI_WIDTH'] != str(auto_func_aoi_width):  
                   sev_changes.append(('AOI_WIDTH', values['AOI_WIDTH']))
               else:
                   sev_changes.append(('AOI_WIDTH', str(auto_func_aoi_width)))
                   
               if values['AOI_HEIGHT'] != str(auto_func_aoi_height):
                   sev_changes.append(('AOI_HEIGHT', values['AOI_HEIGHT']))   
               else:
                   sev_changes.append(('AOI_HEIGHT', str(auto_func_aoi_height)))
                   
               if values['AOI_OFFSETX'] != str(auto_func_aoi_offset_x):  
                   sev_changes.append(('AOI_OFFSETX', values['AOI_OFFSETX']))
               else:
                   sev_changes.append(('AOI_OFFSETX', str(auto_func_aoi_offset_x)))
                   
               if values['AOI_OFFSETY'] != str(auto_func_aoi_offset_y):
                   sev_changes.append(('AOI_OFFSETY', values['AOI_OFFSETY']))
               else:
                   sev_changes.append(('AOI_OFFSETY', str(auto_func_aoi_offset_y)))
                   
               if values['NAME_DEF_VALUE1'] != user_def_value_sel_one:
                   sev_changes.append(('NAME_DEF_VALUE1', values['NAME_DEF_VALUE1'])) 
               else:
                   sev_changes.append(('NAME_DEF_VALUE1', user_def_value_sel_one)) 
                   
               if values['DEF_VALUE1'] != str(user_defined_value_one):
                   sev_changes.append(('DEF_VALUE1', values['DEF_VALUE1'])) 
               else:
                   sev_changes.append(('DEF_VALUE1', str(user_defined_value_one))) 
                    
               if values['NAME_DEF_VALUE2'] != user_def_value_sel_two:
                   sev_changes.append(('NAME_DEF_VALUE2', values['NAME_DEF_VALUE2']))   
               else:
                   sev_changes.append(('NAME_DEF_VALUE2', user_def_value_sel_two)) 
                   
               if values['DEF_VALUE2'] != str(user_defined_value_two):
                   sev_changes.append(('DEF_VALUE2', values['DEF_VALUE2'])) 
               else:
                   sev_changes.append(('DEF_VALUE2', str(user_defined_value_two))) 
                   
               if values['NAME_DEF_VALUE3'] != user_def_value_sel_three:
                   sev_changes.append(('NAME_DEF_VALUE3', values['NAME_DEF_VALUE3'])) 
               else:
                   sev_changes.append(('NAME_DEF_VALUE3', user_def_value_sel_three))
                    
               if values['DEF_VALUE3'] != str(user_defined_value_three): 
                   sev_changes.append(('DEF_VALUE3', values['DEF_VALUE3'])) 
               else:
                   sev_changes.append(('DEF_VALUE3', str(user_defined_value_three)))
                   
               if values['NAME_DEF_VALUE4'] != user_def_value_sel_four:
                   sev_changes.append(('NAME_DEF_VALUE4', values['NAME_DEF_VALUE4']))  
               else:
                   sev_changes.append(('NAME_DEF_VALUE4', user_def_value_sel_four))
                   
               if values['DEF_VALUE4'] != str(user_defined_value_four):
                   sev_changes.append(('DEF_VALUE4', values['DEF_VALUE4'])) 
               else:
                   sev_changes.append(('DEF_VALUE4', str(user_defined_value_four)))
                   
               if values['NAME_DEF_VALUE5'] != user_def_value_sel_five:
                   sev_changes.append(('NAME_DEF_VALUE5', values['NAME_DEF_VALUE5']))
               else:
                   sev_changes.append(('NAME_DEF_VALUE5', user_def_value_sel_five))
                   
               if values['DEF_VALUE5'] != str(user_defined_value_five): 
                   sev_changes.append(('DEF_VALUE5', values['DEF_VALUE5'])) 
               else:
                   sev_changes.append(('DEF_VALUE5', str(user_defined_value_five)))
                   
               break                   
                   
        window.close()  
        
        names_par = []
        
        if len(sev_changes) < 26:
        
            for ind_ch, change in enumerate(sev_changes):
               (name_p, val_p) = change
               
               names_par.append(name_p)          
        
            if True: 
                
               if 'LUT_SEL' not in names_par:
                   sev_changes.insert(0, ('LUT_SEL', lut_sel))
               if 'LUT_VAL' not in names_par:
                   sev_changes.insert(1, ('LUT_VAL', lut_value_abr))
               if 'LUT_EN' not in names_par:
                   sev_changes.insert(2, ('LUT_EN', str(lut_en)))
               if 'GEVS_CHANNEL_SEL' not in names_par:
                   sev_changes.insert(3, ('GEVS_CHANNEL_SEL', gev_stream_channel_sel)) 
               if 'AUTO_TARGET' not in names_par:
                   sev_changes.insert(4, ('AUTO_TARGET', str(auto_target_value))) 
               if 'GREY_ADJUST' not in names_par:
                   sev_changes.insert(5, ('GREY_ADJUST', str(gray_adjust)))  
               if 'BAL_ADJUST' not in names_par:
                   sev_changes.insert(6, ('BAL_ADJUST', str(bal_white_adjust))) 
               if 'GAIN_LOW' not in names_par:
                   sev_changes.insert(7, ('GAIN_LOW', str(auto_gain_lower))) 
               if 'GAIN_UP' not in names_par:
                   sev_changes.insert(8, ('GAIN_UP', str(auto_gain_upper)))
               if 'EXP_LOW' not in names_par:
                   sev_changes.insert(9, ('EXP_LOW', str(auto_exp_lower)))  
               if 'EXP_UP' not in names_par:
                   sev_changes.insert(10, ('EXP_UP', str(auto_exp_upper)))
               if 'AUTO_FUNC_PROF' not in names_par: 
                   sev_changes.insert(11, ('AUTO_FUNC_PROF', auto_func_prof))
               if 'AOI_WIDTH' not in names_par:
                   sev_changes.insert(12, ('AOI_WIDTH', str(auto_func_aoi_width)))
               if 'AOI_HEIGHT' not in names_par:
                   sev_changes.insert(13, ('AOI_HEIGHT', str(auto_func_aoi_height)))
               if 'AOI_OFFSETX' not in names_par:
                   sev_changes.insert(14, ('AOI_OFFSETX', str(auto_func_aoi_offset_x)))
               if 'AOI_OFFSETY' not in names_par:
                   sev_changes.insert(15, ('AOI_OFFSETY', str(auto_func_aoi_offset_y)))               
               if 'NAME_DEF_VALUE1' not in names_par:
                   sev_changes.insert(18, ('NAME_DEF_VALUE1', user_def_value_sel_one))
               if 'DEF_VALUE1' not in names_par:
                   sev_changes.insert(19, ('DEF_VALUE1', str(user_defined_value_one)))
               if 'NAME_DEF_VALUE2' not in names_par:
                   sev_changes.insert(20, ('NAME_DEF_VALUE2', user_def_value_sel_two))
               if 'DEF_VALUE2' not in names_par: 
                   sev_changes.insert(21, ('DEF_VALUE2', str(user_defined_value_two)))
               if 'NAME_DEF_VALUE3' not in names_par:
                   sev_changes.insert(22, ('NAME_DEF_VALUE3', user_def_value_sel_three))
               if 'DEF_VALUE3' not in names_par:
                   sev_changes.insert(23, ('DEF_VALUE3', str(user_defined_value_three)))
               if 'NAME_DEF_VALUE4' not in names_par:
                   sev_changes.insert(24, ('NAME_DEF_VALUE4', user_def_value_sel_four))
               if 'DEF_VALUE4' not in names_par:
                   sev_changes.insert(25, ('DEF_VALUE4', str(user_defined_value_four)))
               if 'NAME_DEF_VALUE5' not in names_par:
                   sev_changes.insert(26, ('NAME_DEF_VALUE5', user_def_value_sel_five))
               if 'DEF_VALUE5' not in names_par:
                   sev_changes.insert(27, ('DEF_VALUE5', str(user_defined_value_five))) 
        
        return sev_changes
    
     
    def gui_seventh():
        
        sev_changes = []
        
        chunk_mode = 0
        event_sel_one = "ExposureEnd"
        event_sel_two = "FrameStartOvertrigger"
        event_sel_three = "AcquisitionStartOvertrigger"
        event_sel_four = "FrameStart"
        event_sel_five = "AcquisitionStart"
        event_sel_six = "EventOverrun"
        
        event_notif_one = "Off"
        event_notif_two = "Off"
        event_notif_three = "Off"
        event_notif_four = "Off"
        event_notif_five = "Off"
        event_notif_six = "Off"
        
        title_left = "Event selector"
        title_right = "Event notification"  
         
        image_viewer_coloumn = [
            [sg.Text("Chunk mode active: " )],
            [sg.Input(default_text= str(chunk_mode), size=(19, 1), key="CHUNK_MODE")],   
            [sg.Text(title_left + ": " ), sg.Text(title_right + ": " )],   
            [sg.Input(default_text= event_sel_one, size=(19, 1), key="EV_SEL_ONE"), sg.Input(default_text= event_notif_one, size=(19, 1), key="EV_NOTIF_ONE")],
            [sg.Input(default_text= event_sel_two, size=(19, 1), key="EV_SEL_TWO"), sg.Input(default_text= event_notif_two, size=(19, 1), key="EV_NOTIF_TWO")],
            [sg.Input(default_text= event_sel_three, size=(19, 1), key="EV_SEL_THREE"), sg.Input(default_text= event_notif_three, size=(19, 1), key="EV_NOTIF_THREE")],
            [sg.Input(default_text= event_sel_four, size=(19, 1), key="EV_SEL_FOUR"), sg.Input(default_text= event_notif_four, size=(19, 1), key="EV_NOTIF_FOUR")],
            [sg.Input(default_text= event_sel_five, size=(19, 1), key="EV_SEL_FIVE"), sg.Input(default_text= event_notif_five, size=(19, 1), key="EV_NOTIF_FIVE")], 
            [sg.Input(default_text= event_sel_six, size=(19, 1), key="EV_SEL_SIX"), sg.Input(default_text= event_notif_six, size=(19, 1), key="EV_NOTIF_SIX")] 
        ]
         
        third_layout = [
            [sg.Button("Back"), sg.Button("Save")]
        ] 
         
        
        layout = [
            [
                sg.Column(image_viewer_coloumn),               
                sg.VSeparator(),               
                sg.Column(third_layout)
            ]
        ]  
        
        window = sg.Window("6th Group properties", layout, modal=True)    
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Back":
               print("No changes")
               break
           if event == "Save": 
               if values['CHUNK_MODE'] != chunk_mode:  
                   sev_changes.append(('CHUNK_MODE', values['CHUNK_MODE']))
               else:
                   sev_changes.append(('CHUNK_MODE', chunk_mode))
                    
               if values['EV_SEL_ONE'] != event_sel_one:  
                   sev_changes.append(('EV_SEL_ONE', values['EV_SEL_ONE']))
               else:
                   sev_changes.append(('EV_SEL_ONE', event_sel_one))
                   
               if values['EV_SEL_TWO'] != event_sel_two:   
                   sev_changes.append(('EV_SEL_TWO', values['EV_SEL_TWO']))
               else:
                   sev_changes.append(('EV_SEL_TWO', event_sel_two))
                   
               if values['EV_SEL_THREE'] != event_sel_three:  
                   sev_changes.append(('EV_SEL_THREE', values['EV_SEL_THREE']))
               else:
                   sev_changes.append(('EV_SEL_THREE', event_sel_three)) 
                   
               if values['EV_SEL_FOUR'] != event_sel_four:  
                   sev_changes.append(('EV_SEL_FOUR', values['EV_SEL_FOUR']))
               else:
                   sev_changes.append(('EV_SEL_FOUR', event_sel_four))
                    
               if values['EV_SEL_FIVE'] != event_sel_five:    
                   sev_changes.append(('EV_SEL_FIVE', values['EV_SEL_FIVE']))
               else:
                   sev_changes.append(('EV_SEL_FIVE', event_sel_five))
                   
               if values['EV_SEL_SIX'] != event_sel_six:   
                   sev_changes.append(('EV_SEL_SIX', values['EV_SEL_SIX'])) 
               else:
                   sev_changes.append(('EV_SEL_SIX', event_sel_six)) 
                    
               if values['EV_NOTIF_ONE'] != event_notif_one:  
                   sev_changes.append(('EV_NOTIF_ONE', values['EV_NOTIF_ONE']))
               else:
                   sev_changes.append(('EV_NOTIF_ONE', event_notif_one)) 
                   
               if values['EV_NOTIF_TWO'] != event_notif_two:   
                   sev_changes.append(('EV_NOTIF_TWO', values['EV_NOTIF_TWO']))
               else:
                   sev_changes.append(('EV_NOTIF_TWO', event_notif_two))
                    
               if values['EV_NOTIF_THREE'] != event_notif_three:   
                   sev_changes.append(('EV_NOTIF_THREE', values['EV_NOTIF_THREE']))
               else:
                   sev_changes.append(('EV_NOTIF_THREE', event_notif_three))
                   
               if values['EV_NOTIF_FOUR'] != event_notif_four:  
                   sev_changes.append(('EV_NOTIF_FOUR', values['EV_NOTIF_FOUR']))
               else:
                   sev_changes.append(('EV_NOTIF_FOUR', event_notif_four)) 
                   
               if values['EV_NOTIF_FIVE'] != event_notif_five:   
                   sev_changes.append(('EV_NOTIF_FIVE', values['EV_NOTIF_FIVE']))
               else:
                   sev_changes.append(('EV_NOTIF_FIVE', event_notif_five)) 
                   
               if values['EV_NOTIF_SIX'] != event_notif_six:  
                   sev_changes.append(('EV_NOTIF_SIX', values['EV_NOTIF_SIX']))  
               else:
                   sev_changes.append(('EV_NOTIF_SIX', event_notif_six)) 
                    
               break 
           
        window.close()
        
        names_par = []        
        
        if len(sev_changes) < 13:
        
            for ind_ch, change in enumerate(sev_changes):
               (name_p, val_p) = change
               
               names_par.append(name_p)           
        
            if True: 
                
               if 'CHUNK_MODE' not in names_par:
                   sev_changes.insert(0, ('CHUNK_MODE', chunk_mode))               
               if 'EV_SEL_ONE' not in names_par:
                   sev_changes.insert(1, ('EV_SEL_ONE', event_sel_one))
               if 'EV_SEL_TWO' not in names_par:
                   sev_changes.insert(2, ('EV_SEL_TWO', event_sel_two))
               if 'EV_SEL_THREE' not in names_par:
                   sev_changes.insert(3, ('EV_SEL_THREE', event_sel_three)) 
               if 'EV_SEL_FOUR' not in names_par:
                   sev_changes.insert(4, ('EV_SEL_FOUR', event_sel_four)) 
               if 'EV_SEL_FIVE' not in names_par:
                   sev_changes.insert(5, ('EV_SEL_FIVE', event_sel_five)) 
               if 'EV_SEL_SIX' not in names_par:
                   sev_changes.insert(6, ('EV_SEL_SIX', event_sel_six)) 
               if 'EV_NOTIF_ONE' not in names_par:
                   sev_changes.insert(7, ('EV_NOTIF_ONE', event_notif_one)) 
               if 'EV_NOTIF_TWO' not in names_par:
                   sev_changes.insert(8, ('EV_NOTIF_TWO', event_notif_two))
               if 'EV_NOTIF_THREE' not in names_par:
                   sev_changes.insert(9, ('EV_NOTIF_THREE', event_notif_three))  
               if 'EV_NOTIF_FOUR' not in names_par:
                   sev_changes.insert(10, ('EV_NOTIF_FOUR', event_notif_four))
               if 'EV_NOTIF_FIVE' not in names_par: 
                   sev_changes.insert(11, ('EV_NOTIF_FIVE', event_notif_five))
               if 'EV_NOTIF_SIX' not in names_par:
                   sev_changes.insert(12, ('EV_NOTIF_SIX', event_notif_six)) 
              
        
        return sev_changes          
         
    def main_gui():
        
        all_params_changes = {}
        
        adv_viewer = [
            [sg.Text("Advanced properties")],
            [sg.Button("Headers")],
            [sg.Button("First Group")],
            [sg.Button("Second Group")],
            [sg.Button("Third Group")],
            [sg.Button("Fourth Group")],
            [sg.Button("Fifth Group")],
            [sg.Button("Sixth Group")],
            [sg.Button("Back"), sg.Button("Check camera-link speed")]
                      
        ] 
        
        actions = [
            sg.Button("Back")
        ]
        
        window = sg.Window("Advanced properties", adv_viewer)
        
        while True:
           event, values = window.read()
           if event == "Exit" or event == sg.WIN_CLOSED:
               break
           if event == "Headers":
               changes_headers = gui_headers()
               
               if len(changes_headers) > 0:
                
                   for change in changes_headers:
                       par_name, par_value = change
                       all_params_changes[par_name] = par_value           
           
           if event == "First Group":
               changes_first_group = gui_seq()
               
               if len(changes_first_group) > 0:
                   for change in changes_first_group:
                       par_name, par_value = change
                       all_params_changes[par_name] = par_value
           
           if event == "Second Group":
               changes_sec_group = gui_t()
                
               if len(changes_sec_group) > 0: 
                   for change in changes_sec_group:
                       par_name, par_value = change
                       all_params_changes[par_name] = par_value     
           
           if event == "Third Group":
                changes_third_group = gui_fourth()
                 
                if len(changes_third_group) > 0: 
                   for change in changes_third_group:
                       par_name, par_value = change
                       all_params_changes[par_name] = par_value
                       
           if event == "Fourth Group":
                changes_fourth_group = gui_fifth() 
                 
                if len(changes_fourth_group) > 0: 
                   for change in changes_fourth_group:
                       par_name, par_value = change
                       all_params_changes[par_name] = par_value
                       
           if event == "Fifth Group":
                changes_fifth_group = gui_sixth()
                 
                if len(changes_fifth_group) > 0: 
                   for change in changes_fifth_group:
                       par_name, par_value = change 
                       all_params_changes[par_name] = par_value 
                       
           if event == "Sixth Group":
                changes_sixth_group = gui_seventh()
                 
                if len(changes_sixth_group) > 0: 
                   for change in changes_sixth_group:
                       par_name, par_value = change 
                       all_params_changes[par_name] = par_value

           if event == "Check camera-link speed":
           
                camera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())
                converter = pylon.ImageFormatConverter()               
                
                while run_again == True:

                    try:               
                        camera.Open()
                        run_again = False
                    except RuntimeError:
                        print(" -- Please check the wire connection !!!")
                        print("Trying again in 10 seconds ...")
                        
                        time.sleep(10)
                        
                        run_again = True
                        
                        
                get_link_speed_statistics(camera)
            
           if event == "Back":
               break                     
         
        window.close()       
       
        return all_params_changes 
        
    params_changed = main_gui() 
    
  
    
    if 'GENAPI_V' not in params_changed.keys(): 
        params_changed['GENAPI_V'] = str(genapi_version)    
    if 'DEV_V' not in params_changed.keys(): 
        params_changed['DEV_V'] = str(dev_version)        
    if 'DEV_NAME' not in params_changed.keys(): 
        params_changed['DEV_NAME'] = str(dev_name)        
    if 'INIT_CODE' not in params_changed.keys(): 
        params_changed['INIT_CODE'] = str(init_code)
    if 'PROD_GUID' not in params_changed.keys(): 
        params_changed['PROD_GUID'] = str(product_guid)
    if 'PROD_V_GUID' not in params_changed.keys(): 
        params_changed['PROD_V_GUID'] = str(product_version_guid)     
        
    
    if 'SEQ_TOT' not in params_changed.keys(): 
        params_changed['SEQ_TOT'] = str(seq_tot_number)                     
    if 'SEQ_INDEX' not in params_changed.keys(): 
        params_changed['SEQ_INDEX'] = str(seq_index)       
    if 'SEQ_EXEC' not in params_changed.keys():       
        params_changed['SEQ_EXEC'] = str(seq_exec) 
    if 'SEQ_ADV' not in params_changed.keys():        
        params_changed['SEQ_ADV'] = adv_mode_def 
    if 'GAIN_AUTO' not in params_changed.keys():       
        params_changed['GAIN_AUTO'] = gain_auto 
    if 'GAIN_SEL' not in params_changed.keys():     
        params_changed['GAIN_SEL'] = gain_sel 
    if 'BLACK_LEV_SEL' not in params_changed.keys(): 
        params_changed['BLACK_LEV_SEL'] = black_level_sel         
    if 'GAMMA_EN' not in params_changed.keys(): 
        params_changed['GAMMA_EN'] = str(gamma_en)       
    if 'GAMMA_SEL' not in params_changed.keys(): 
        params_changed['GAMMA_SEL'] = opt_gamma_sel         
    if 'GAMMA' not in params_changed.keys():
        params_changed['GAMMA'] = str(gamma) 
    if 'DIG_SHIFT' not in params_changed.keys():
        params_changed['DIG_SHIFT'] = str(dig_shift)   
    if 'PIX_FORMAT' not in params_changed.keys():
        params_changed['PIX_FORMAT'] = pix_format_def 
    if 'REV_X' not in params_changed.keys():
        params_changed['REV_X'] = str(reversx)             
    if 'TEST_IMAGE_SEL' not in params_changed.keys(): 
        params_changed['TEST_IMAGE_SEL'] = test_image_sel       
    if 'OFFSET_X' not in params_changed.keys():    
        params_changed['OFFSET_X'] = str(offset_x) 
    if 'OFFSET_Y' not in params_changed.keys():
        params_changed['OFFSET_Y'] = str(offset_y)
    if 'CENTER_X' not in params_changed.keys():
        params_changed['CENTER_X'] = str(center_x) 
    if 'CENTER_Y' not in params_changed.keys():
        params_changed['CENTER_Y'] = str(center_y)
    if 'BIN_MODE_H' not in params_changed.keys():
        params_changed['BIN_MODE_H'] = bin_mode_horiz 
    if 'BIN_H' not in params_changed.keys():
        params_changed['BIN_H'] = str(bin_horiz) 
    if 'BIN_MODE_V' not in params_changed.keys():
        params_changed['BIN_MODE_V'] = bin_mode_vert     
    if 'BIN_V' not in params_changed.keys():
        params_changed['BIN_V'] = str(bin_vert)
    if 'ACQ_FRAME_COUNT' not in params_changed.keys():
        params_changed['ACQ_FRAME_COUNT'] = str(acq_frame_count)
    if 'TRIG_SEL_ONE' not in params_changed.keys():
        params_changed['TRIG_SEL_ONE'] = trigger_sel_one  
    if 'TRIGGER_MODE' not in params_changed.keys(): 
        params_changed['TRIGGER_MODE'] = trigger_mode
    if 'TRIG_SEL_TWO' not in params_changed.keys(): 
        params_changed['TRIG_SEL_TWO'] = trigger_sel_two         
    if 'TRIG_SOURCE' not in params_changed.keys():
        params_changed['TRIG_SOURCE'] = trigger_source
    if 'TRIG_ACTIV' not in params_changed.keys():
        params_changed['TRIG_ACTIV'] = trigger_activation
    if 'TRIG_DELAY_ABS' not in params_changed.keys():
        params_changed['TRIG_DELAY_ABS'] = str(trigger_delay_abs)
    if 'EXP_MODE' not in params_changed.keys():
        params_changed['EXP_MODE'] = exp_mode 
    if 'EXP_AUTO' not in params_changed.keys():
        params_changed['EXP_AUTO'] = exp_auto     
    if 'SHUTTER_MODE' not in params_changed.keys():
        params_changed['SHUTTER_MODE'] = shutter_mode  
    if 'ACQ_FR_EN' not in params_changed.keys():
        params_changed['ACQ_FR_EN'] = str(acq_frame_rate_en)          
    if 'LINE_SEL_ONE' not in params_changed.keys():
        params_changed['LINE_SEL_ONE'] = line_sel_one 
    if 'LINE_SEL_TWO' not in params_changed.keys():
        params_changed['LINE_SEL_TWO'] = line_sel_two 
    if 'LINE_MODE_ONE' not in params_changed.keys():
        params_changed['LINE_MODE_ONE'] = line_mode_in
    if 'LINE_MODE_TWO' not in params_changed.keys():
        params_changed['LINE_MODE_TWO'] = line_mode_out 
    if 'LINE_FORMAT' not in params_changed.keys():
        params_changed['LINE_FORMAT'] = line_format 
    if 'LINE_SOURCE' not in params_changed.keys(): 
        params_changed['LINE_SOURCE'] = line_source 
    if 'LINE_INV' not in params_changed.keys(): 
        params_changed['LINE_INV'] = str(line_inv) 
    if 'LINE_DEB_TIME' not in params_changed.keys():
        params_changed['LINE_DEB_TIME'] = str(line_deb_time) 
    if 'LINE_MINOUT_PULSE' not in params_changed.keys():
        params_changed['LINE_MINOUT_PULSE'] = str(minout_pulse) 
    if 'COUNTER_SEL_ONE' not in params_changed.keys():
        params_changed['COUNTER_SEL_ONE'] = counter_sel_one 
    if 'COUNTER_SEL_TWO' not in params_changed.keys():
        params_changed['COUNTER_SEL_TWO'] = counter_sel_two 
    if 'COUNT_EV_SOURCE_ONE' not in params_changed.keys():
        params_changed['COUNT_EV_SOURCE_ONE'] = counter_ev_source_one 
    if 'COUNT_EV_SOURCE_TWO' not in params_changed.keys():
        params_changed['COUNT_EV_SOURCE_TWO'] = counter_ev_source_two 
    if 'COUNTER_RESET_SOURCE' not in params_changed.keys():
        params_changed['COUNTER_RESET_SOURCE'] = counter_reset_source         
    if 'LUT_SEL' not in params_changed.keys():
        params_changed['LUT_SEL'] = lut_sel 
    if 'LUT_VAL' not in params_changed.keys():
        params_changed['LUT_VAL'] = lut_value_abr
    if 'LUT_EN' not in params_changed.keys():
        params_changed['LUT_EN'] = str(lut_en)
    if 'GEVS_CHANNEL_SEL' not in params_changed.keys():
        params_changed['GEVS_CHANNEL_SEL'] = gev_stream_channel_sel
    if 'AUTO_TARGET' not in params_changed.keys():
        params_changed['AUTO_TARGET'] = str(auto_target_value)
    if 'GREY_ADJUST' not in params_changed.keys():
        params_changed['GREY_ADJUST'] = str(gray_adjust)
    if 'BAL_ADJUST' not in params_changed.keys():
        params_changed['BAL_ADJUST'] = str(bal_white_adjust)
    if 'GAIN_LOW' not in params_changed.keys():
        params_changed['GAIN_LOW'] = str(auto_gain_lower)
    if 'GAIN_UP' not in params_changed.keys():
        params_changed['GAIN_UP'] = str(auto_gain_upper)
    if 'EXP_LOW' not in params_changed.keys():
        params_changed['EXP_LOW'] = str(auto_exp_lower)
    if 'EXP_UP' not in params_changed.keys():
        params_changed['EXP_UP'] = str(auto_exp_upper)
    if 'AUTO_FUNC_PROF' not in params_changed.keys():
        params_changed['AUTO_FUNC_PROF'] = auto_func_prof
    if 'AOI_WIDTH' not in params_changed.keys():
        params_changed['AOI_WIDTH'] = str(auto_func_aoi_width)
    if 'AOI_HEIGHT' not in params_changed.keys():
        params_changed['AOI_HEIGHT'] = str(auto_func_aoi_height)
    if 'AOI_OFFSETX' not in params_changed.keys():
        params_changed['AOI_OFFSETX'] = str(auto_func_aoi_offset_x)
    if 'AOI_OFFSETY' not in params_changed.keys():
        params_changed['AOI_OFFSETY'] = str(auto_func_aoi_offset_y)
    if 'NAME_DEF_VALUE1' not in params_changed.keys():
        params_changed['NAME_DEF_VALUE1'] = user_def_value_sel_one
    if 'DEF_VALUE1' not in params_changed.keys():
        params_changed['DEF_VALUE1'] = str(user_defined_value_one)   
    if 'NAME_DEF_VALUE2' not in params_changed.keys():
        params_changed['NAME_DEF_VALUE2'] = user_def_value_sel_two   
    if 'DEF_VALUE2' not in params_changed.keys(): 
        params_changed['DEF_VALUE2'] = str(user_defined_value_two)   
    if 'NAME_DEF_VALUE3' not in params_changed.keys():
        params_changed['NAME_DEF_VALUE3'] = user_def_value_sel_three
    if 'DEF_VALUE3' not in params_changed.keys():
        params_changed['DEF_VALUE3'] = str(user_defined_value_three)
    if 'NAME_DEF_VALUE4' not in params_changed.keys():
        params_changed['NAME_DEF_VALUE4'] = user_def_value_sel_four
    if 'DEF_VALUE4' not in params_changed.keys():
        params_changed['DEF_VALUE4'] = str(user_defined_value_four)
    if 'NAME_DEF_VALUE5' not in params_changed.keys():
        params_changed['NAME_DEF_VALUE5'] = user_def_value_sel_five
    if 'DEF_VALUE5' not in params_changed.keys(): 
        params_changed['DEF_VALUE5'] = str(user_defined_value_five)
    
    if 'CHUNK_MODE' not in params_changed.keys(): 
        params_changed['CHUNK_MODE'] = chunk_mode
    if 'EV_SEL_ONE' not in params_changed.keys(): 
        params_changed['EV_SEL_ONE'] = event_sel_one
    if 'EV_SEL_TWO' not in params_changed.keys(): 
        params_changed['EV_SEL_TWO'] = event_sel_two
    if 'EV_SEL_THREE' not in params_changed.keys(): 
        params_changed['EV_SEL_THREE'] = event_sel_three
    if 'EV_SEL_FOUR' not in params_changed.keys(): 
        params_changed['EV_SEL_FOUR'] = event_sel_four
    if 'EV_SEL_FIVE' not in params_changed.keys(): 
        params_changed['EV_SEL_FIVE'] = event_sel_five
    if 'EV_SEL_SIX' not in params_changed.keys(): 
        params_changed['EV_SEL_SIX'] = event_sel_six
    if 'EV_NOTIF_ONE' not in params_changed.keys(): 
        params_changed['EV_NOTIF_ONE'] = event_notif_one
    if 'EV_NOTIF_TWO' not in params_changed.keys(): 
        params_changed['EV_NOTIF_TWO'] = event_notif_two
    if 'EV_NOTIF_THREE' not in params_changed.keys(): 
        params_changed['EV_NOTIF_THREE'] = event_notif_three
    if 'EV_NOTIF_FOUR' not in params_changed.keys(): 
        params_changed['EV_NOTIF_FOUR'] = event_notif_four
    if 'EV_NOTIF_FIVE' not in params_changed.keys(): 
        params_changed['EV_NOTIF_FIVE'] = event_notif_five 
    if 'EV_NOTIF_SIX' not in params_changed.keys(): 
        params_changed['EV_NOTIF_SIX'] = event_notif_six 
         
                     
    print("Parameters down in gui_advanced.py: ")
    
    for par in params_changed:
        print(par)
        
    return params_changed 
            
## adv_params_gui()        
            
            
        
